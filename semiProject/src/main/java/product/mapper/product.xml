<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
 "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="product">

	<!-- 첨부파일 정보 -->
	<select id="file_info" resultType="String">
		select filename 
		from product 
		where product_code=#{product_code}
	</select>

	<!-- 상품 목록 -->
	<select id="list_product" resultType="product.dto.ProductDTO">
		select * 
		from (
		select A.*, rownum as rn
		from (
		select product_code, product_name, description, price, filename
		from product
		order by product_code desc) A
		) where rn between #{start} and #{end}
	</select>
	
	<!-- 상품 상세정보 -->
	<select id="detail_product" resultType="product.dto.ProductDTO">
		select * 
		from product 
		where product_code=#{product_code}
	</select>
	
	<!-- 상품 등록 -->
	<insert id="insert_product">
		insert into product (product_code, product_name, price, description, filename)
		values
		(product_seq.nextval, #{product_name}, #{price}, #{description},
		 #{filename} )
	</insert>
	
	<!-- 상품 정보수정 -->
	<update id="update_product">
		update product set product_name=#{product_name},
			price=#{price},
			description=#{description}, filename=#{filename}
		where product_code=#{product_code}
	</update>
	
	<!-- 상품 삭제 -->
	<delete id="delete_product">
		delete from product 
		where product_code=#{product_code}
	</delete>
	
	<!-- 신상품 목록 -->
	<select id="newList_product" resultType="product.dto.ProductDTO">
	select * 
	from (
	select A.*, rownum as rn
	from (
	select product_code, product_name, description, price, filename
	from product
	order by product_code desc) A
	) where rn between 1 and 8
	</select>
	
	<!-- 상품 검색 -->
	<select id="searchList" resultType="product.dto.ProductDTO">
	select * from product where product_name like #{keyword} order by product_name
	</select>
	
	<!-- 게시물 개수 계산 -->
	<select id="count" resultType="int">
		select count(*) from product
	</select>

	
</mapper>